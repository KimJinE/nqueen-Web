{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimjin/Desktop/notes/CISC481/Program2/program2/my-app/src/MainPage/MainPage.jsx\";\nimport React from \"react\";\nimport { Container, Row, Col, Button, Modal, ListGroup, Spinner } from \"react-bootstrap\";\nimport \"./MainPage.css\";\nimport Select from \"react-select\";\nimport queen from \"../queen.jpg\";\nimport x from \"../x.jpg\";\nvar options = [{\n  label: \"1 queen\",\n  value: 1\n}];\nconst colors = {\n  1: \"#23AF23\",\n  2: \"#98C90B\"\n};\nconst colors2 = {\n  2: \"#23AF23\",\n  1: \"#98C90B\"\n};\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Queennumber = e => {\n      const val = e.value;\n      var curBoard = [];\n\n      for (var i = 0; i < val; i++) {\n        curBoard.push(new Array(val).fill(0));\n        this.state.occupied.add(i);\n      }\n\n      this.setState({\n        board: curBoard,\n        board2: JSON.parse(JSON.stringify(curBoard)),\n        queens: val,\n        visted: new Set(),\n        occupied: new Set()\n      });\n      this.forceUpdate();\n    };\n\n    this.change = (e, i) => {\n      if (this.state.solution.length === 0) {\n        alert(\"there is solution for this puzzle yet\");\n        return;\n      }\n\n      const solutionnow = this.state.curSelectSolution || this.state.solution[0];\n      this.setState({\n        board: JSON.parse(JSON.stringify(solutionnow))\n      });\n    };\n\n    this.solve = () => {\n      var mysolution = [];\n      if (this.solveThePuzzle(this.state.board2, 0, mysolution) === false) alert(\"there is solution for this board\");\n      const after_filter = [];\n      mysolution.forEach(vall => {\n        var contains = true;\n        this.state.visited.forEach(val => {\n          //alert(val[0] +\"\" +val[1]);\n          if (vall[val[0]][val[1]] === 0) {\n            contains = false;\n          }\n        });\n        if (contains === true) after_filter.push(vall);\n      }); //alert(JSON.stringify(after_filter));\n\n      this.setState({\n        solution: after_filter,\n        loading: \"none\"\n      });\n      this.forceUpdate();\n    };\n\n    this.addqueen = (e, i, j) => {\n      if (!this.isSave(this.state.board, i, j) && (this.state.board[i][j] === 0 || this.state.board[i][j] === -1)) {\n        alert(\"this position can not place queen\");\n        return;\n      }\n\n      var curIndex = this.state.board;\n\n      if (curIndex[i][j] === 1) {\n        curIndex[i][j] = 0;\n        this.setState({\n          board: curIndex\n        });\n        this.state.visited.delete([i, j]);\n        this.state.occupied.add(j);\n      } else if (curIndex[i][j] === 0 && this.state.queens > 0) {\n        curIndex[i][j] = 1;\n        this.state.visited.add([i, j]);\n        this.setState({\n          board: curIndex\n        });\n        this.state.occupied.delete(j);\n      } else {\n        alert(\"There is no queen left\");\n      }\n\n      this.forceUpdate();\n    };\n\n    this.isSave = (board, row, col) => {\n      var i, j;\n\n      for (i = 0; i < board.length; i++) if (board[row][i] === 1) return false;\n\n      for (i = row, j = col; i >= 0 && j >= 0; i--, j--) if (board[i][j] === 1) return false;\n\n      for (i = row, j = col; j >= 0 && i < board.length; i++, j--) if (board[i][j] === 1) return false; // used for function unavaliable\n\n\n      for (i = row, j = col; i < board.length && j < board.length; i++, j++) if (board[i][j] === 1) return false;\n\n      for (i = row, j = col; i >= 0 && j < board.length; i--, j++) if (board[i][j] === 1) return false;\n\n      for (i = board.length; i >= 0; i--) if (board[row][i] === 1) return false;\n\n      return true;\n    };\n\n    this.solveThePuzzle = (board, col, mysolution) => {\n      if (col === board.length) {\n        mysolution.push(JSON.parse(JSON.stringify(board)));\n        return true;\n      }\n\n      var res = false;\n\n      for (var i = 0; i < board.length; i++) {\n        if (this.state.visited.has(col + \"\" + i + \"\")) {\n          alert(1);\n          continue;\n        }\n\n        if (this.isSave(board, i, col)) {\n          board[i][col] = 1;\n          res = this.solveThePuzzle(board, col + 1, mysolution) || res;\n          board[i][col] = 0;\n        }\n      }\n\n      return res;\n    };\n\n    this.state = {\n      board: [],\n      board2: [],\n      solution: [],\n      occupied: new Set(),\n      visited: new Set(),\n      queens: 8,\n      show: false,\n      showselected: false,\n      curSelectSolution: null,\n      loading: \"none\"\n    };\n  }\n\n  componentDidMount() {\n    for (var j = 2; j <= 32; j++) {\n      options.push({\n        label: `${j} queens`,\n        value: j\n      });\n    }\n\n    var curBoard = [];\n\n    for (var i = 0; i < this.state.queens; i++) {\n      curBoard.push(new Array(this.state.queens).fill(0));\n      this.state.occupied.add(i);\n    }\n\n    this.setState({\n      board: curBoard,\n      board2: JSON.parse(JSON.stringify(curBoard))\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"web-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainpart\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          style: {\n            display: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sizeDecide\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"selection\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                position: 'absolute',\n                top: '50%'\n              },\n              onChange: e => {\n                console.log(e);\n                this.Queennumber(e);\n              },\n              label: \"Select Queens\",\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"texts\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Backtracking Search for -queeen problem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            width: '94%',\n            height: '40%',\n            marginTop: '30px',\n            marginLeft: '3%',\n            border: 'solid #33BCC1 2px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '10px',\n              marginLeft: '3%',\n              height: '20px',\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: '15px'\n            },\n            children: \"Specify Any Required location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controller\",\n            children: this.state.board.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cheese\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  backgroundColor: '#33BCC1',\n                  width: '30px',\n                  height: '100%',\n                  color: 'white',\n                  fontSize: '15px',\n                  textAlign: 'center',\n                  borderRadius: '6px',\n                  display: 'inline-block'\n                },\n                children: [\"Q\", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), val.map((val, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"pickrow\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"button\",\n            onClick: this.solve,\n            children: \"Slove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.change,\n            children: \"g\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mainboard\",\n          children: this.state.board.map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              xs: 10,\n              style: {\n                height: 640 / this.state.board.length + \"px\",\n                alignContent: \"center\",\n                justifyContent: \"center\",\n                textAlignVertical: \"center\",\n                textAlign: \"center\",\n                margin: \"0.1vh\"\n              },\n              children: val.map((vall, a) => {\n                const cur = index % 2 === 0 ? colors2 : colors;\n                var img = \"\";\n\n                switch (vall) {\n                  default:\n                    img = \"\";\n                    break;\n\n                  case 1:\n                    img = queen;\n                    break;\n\n                  case -1:\n                    img = x;\n                    break;\n                }\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: 640 / val.length + 'px',\n                    display: \"inline-block\",\n                    alignContent: \"center\",\n                    justifyContent: \"center\",\n                    textAlignVertical: \"center\",\n                    textAlign: \"center\",\n                    backgroundColor: cur[a % 2 + 1],\n                    margin: \"0.1vh\",\n                    height: \"100%\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      backgroundColor: \"transparent\",\n                      outlineColor: \"transparent\",\n                      borderColor: \"transparent\",\n                      marginTop: \"10%\",\n                      backgroundImage: `url(${img})`,\n                      backgroundSize: \"100% 100%\",\n                      height: \"80%\",\n                      width: \"80%\"\n                    },\n                    onClick: e => {\n                      this.addqueen(e, index, a);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 33\n                }, this);\n              })\n            }, \"row\" + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kimjin/Desktop/notes/CISC481/Program2/program2/my-app/src/MainPage/MainPage.jsx"],"names":["React","Container","Row","Col","Button","Modal","ListGroup","Spinner","Select","queen","x","options","label","value","colors","colors2","MainPage","Component","constructor","props","Queennumber","e","val","curBoard","i","push","Array","fill","state","occupied","add","setState","board","board2","JSON","parse","stringify","queens","visted","Set","forceUpdate","change","solution","length","alert","solutionnow","curSelectSolution","solve","mysolution","solveThePuzzle","after_filter","forEach","vall","contains","visited","loading","addqueen","j","isSave","curIndex","delete","row","col","res","has","show","showselected","componentDidMount","render","display","position","top","console","log","backgroundColor","width","height","marginTop","marginLeft","border","color","fontWeight","fontSize","map","index","textAlign","borderRadius","alignContent","justifyContent","textAlignVertical","margin","a","cur","img","outlineColor","borderColor","backgroundImage","backgroundSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n    Modal,\n    ListGroup,\n    Spinner,\n  } from \"react-bootstrap\";\nimport \"./MainPage.css\";\nimport Select from \"react-select\";\nimport queen from \"../queen.jpg\";\nimport x from \"../x.jpg\";\n\nvar options = [{ label: \"1 queen\", value: 1 }];\nconst colors = {\n    1: \"#23AF23\",\n    2: \"#98C90B\",\n  };\n  \n  const colors2 = {\n    2: \"#23AF23\",\n    1: \"#98C90B\",\n  };\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            board: [],\n            board2: [],\n            solution: [],\n            occupied: new Set(),\n            visited: new Set(),\n            queens: 8,\n            show: false,\n            showselected: false,\n            curSelectSolution: null,\n            loading: \"none\",\n          };\n    }\n\n    componentDidMount() {\n        for (var j = 2; j <= 32; j++) {\n          options.push({ label: `${j} queens`, value: j });\n        }\n        var curBoard = [];\n        for (var i = 0; i < this.state.queens; i++) {\n          curBoard.push(new Array(this.state.queens).fill(0));\n          this.state.occupied.add(i);\n        }\n        this.setState({\n          board: curBoard,\n          board2: JSON.parse(JSON.stringify(curBoard)),\n        });\n      }\n\n    Queennumber = (e) => {\n        const val = e.value;\n        var curBoard = [];\n        for (var i = 0; i < val; i++) {\n          curBoard.push(new Array(val).fill(0));\n          this.state.occupied.add(i);\n        }\n        this.setState({\n          board: curBoard,\n          board2: JSON.parse(JSON.stringify(curBoard)),\n          queens: val,\n          visted: new Set(),\n          occupied: new Set(),\n        });\n        this.forceUpdate();\n    };\n\n    change = (e, i) => {\n        if (this.state.solution.length === 0) {\n          alert(\"there is solution for this puzzle yet\");\n          return;\n        }\n        const solutionnow = this.state.curSelectSolution || this.state.solution[0];\n        this.setState({ board: JSON.parse(JSON.stringify(solutionnow)) });\n    };\n\n    solve = () => {\n        var mysolution = [];\n        if (this.solveThePuzzle(this.state.board2, 0, mysolution) === false)\n          alert(\"there is solution for this board\");\n    \n        const after_filter = [];\n        mysolution.forEach((vall) => {\n          var contains = true;\n          this.state.visited.forEach((val) => {\n            //alert(val[0] +\"\" +val[1]);\n            if (vall[val[0]][val[1]] === 0) {\n              contains = false;\n            }\n          });\n          if (contains === true) after_filter.push(vall);\n        });\n    \n        //alert(JSON.stringify(after_filter));\n        this.setState({ solution: after_filter, loading: \"none\"});\n        this.forceUpdate();\n      };\n\n    addqueen = (e, i, j) => {\n    if (\n        !this.isSave(this.state.board, i, j) &&\n        (this.state.board[i][j] === 0 || this.state.board[i][j] === -1)\n    ) {\n        alert(\"this position can not place queen\");\n        return;\n    }\n    var curIndex = this.state.board;\n    if (curIndex[i][j] === 1) {\n        curIndex[i][j] = 0;\n        this.setState({ board: curIndex });\n        this.state.visited.delete([i, j]);\n        this.state.occupied.add(j);\n    } else if (curIndex[i][j] === 0 && this.state.queens > 0) {\n        curIndex[i][j] = 1;\n        this.state.visited.add([i, j]);\n        this.setState({ board: curIndex });\n        this.state.occupied.delete(j);\n    } else {\n        alert(\"There is no queen left\");\n    }\n    this.forceUpdate();\n    };\n\n    isSave = (board, row, col) => {\n    var i, j;\n    for (i = 0; i < board.length; i++) if (board[row][i] === 1) return false;\n\n    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)\n        if (board[i][j] === 1) return false;\n\n    for (i = row, j = col; j >= 0 && i < board.length; i++, j--)\n        if (board[i][j] === 1) return false;\n    // used for function unavaliable\n    for (i = row, j = col; i < board.length && j < board.length; i++, j++)\n        if (board[i][j] === 1) return false;\n    for (i = row, j = col; i >= 0 && j < board.length; i--, j++)\n        if (board[i][j] === 1) return false;\n    for (i = board.length; i >= 0; i--) if (board[row][i] === 1) return false;\n    return true;\n    };\n\n    solveThePuzzle = (board, col, mysolution) => {\n        if (col === board.length) {\n          mysolution.push(JSON.parse(JSON.stringify(board)));\n          return true;\n        }\n    \n        var res = false;\n        for (var i = 0; i < board.length; i++) {\n          if (this.state.visited.has(col + \"\" + i + \"\")) {\n            alert(1);\n            continue;\n          }\n          if (this.isSave(board, i, col)) {\n            board[i][col] = 1;\n            res = this.solveThePuzzle(board, col + 1, mysolution) || res;\n            board[i][col] = 0;\n          }\n        }\n        return res;\n    };\n\n    render() {\n        return (\n            <div className='web-container'>\n                <div className='mainpart'>\n                    <Spinner \n                    animation=\"border\" \n                    role=\"status\"\n                    style={{display: 'none'}}>\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                    <div className='sizeDecide'>\n                        <div id='selection'>\n                            <Select\n                                style={{position: 'absolute', top: '50%'}}\n                                onChange={(e) => {\n                                console.log(e);\n                                this.Queennumber(e);\n                                }}\n                                label=\"Select Queens\"\n                                options={options}\n                            />\n                        </div>\n                        <div id='texts'>\n                            <p>Backtracking Search for -queeen problem</p>\n                        </div>\n                    </div>\n                    <div style={{backgroundColor:'rgba(0, 0, 0, 0.7)', width: '94%', height: '40%', marginTop: '30px', marginLeft: '3%', border: 'solid #33BCC1 2px'}}>\n                        <p style={{marginTop: '10px', marginLeft: '3%' ,height: '20px', color: 'white', fontWeight: 'bold', fontSize: '15px'}}>Specify Any Required location</p>\n                        <div className='controller'>\n                            {this.state.board.map((val, index) => (\n                                <div className='cheese'>\n                                    <p style={{backgroundColor: '#33BCC1', width: '30px', height: '100%', color: 'white', fontSize: '15px', textAlign: 'center', borderRadius: '6px', display: 'inline-block'}}>\n                                        Q{index+1}:\n                                    </p>\n                                    {val.map((val, index) => (\n                                        <a className='pickrow'>\n                                            {index+1}\n                                        </a>\n                                    ))}\n                                </div>\n                            ))}\n                        </div>\n                        <Button id='button' onClick={this.solve}>\n                            Slove\n                        </Button>\n                        <Button onClick={this.change}>\n                            g\n                        </Button>\n                    </div>\n                    <div id='mainboard'>\n                    {this.state.board.map((val, index) => {\n                        return (\n                            <div\n                            xs={10}\n                            key={\"row\" + index}\n                            style={{\n                                height: 640 / this.state.board.length + \"px\",\n                                alignContent: \"center\",\n                                justifyContent: \"center\",\n                                textAlignVertical: \"center\",\n                                textAlign: \"center\",\n                                margin: \"0.1vh\"\n                            }}\n                            >\n                            {val.map((vall, a) => {\n                                const cur = index % 2 === 0 ? colors2 : colors;\n                                var img = \"\";\n                                switch (vall) {\n                                default:\n                                    img = \"\";\n                                    break;\n                                case 1:\n                                    img = queen;\n                                    break;\n                                case -1:\n                                    img = x;\n                                    break;\n                                }\n                                return (\n                                <div\n                                    style={{\n                                    width: 640/val.length +'px',\n                                    display: \"inline-block\",\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    textAlignVertical: \"center\",\n                                    textAlign: \"center\",\n                                    backgroundColor: cur[(a % 2) + 1],\n                                    margin: \"0.1vh\",\n                                    height: \"100%\"\n                                    }}\n                                >\n                                    <Button\n                                    style={{\n                                        backgroundColor: \"transparent\",\n                                        outlineColor: \"transparent\",\n                                        borderColor: \"transparent\",\n                                        marginTop: \"10%\",\n                                        backgroundImage: `url(${img})`,\n                                        backgroundSize: \"100% 100%\",\n                                        height: \"80%\",\n                                        width: \"80%\"\n                                    }}\n                                    onClick={(e) => {\n                                        this.addqueen(e, index, a);\n                                    }}\n                                    ></Button>\n                                </div>\n                                );\n                            })}\n                            </div>\n                        );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}