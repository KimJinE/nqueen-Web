{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimjin/Desktop/notes/CISC481/Program2/program2/my-app/src/MainPage/MainPage.js\";\nimport React from \"react\";\nimport { Container, Row, Col, Button, Modal, ListGroup, Spinner } from \"react-bootstrap\";\nimport \"./MainPage.css\";\nimport Select from \"react-select\";\nvar options = [{\n  label: \"1 queen\",\n  value: 1\n}];\nconst colors = {\n  1: \"gray\",\n  2: \"green\"\n};\nconst colors2 = {\n  2: \"gray\",\n  1: \"green\"\n};\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Queennumber = e => {\n      const val = e.value;\n      var curBoard = [];\n\n      for (var i = 0; i < val; i++) {\n        curBoard.push(new Array(val).fill(0));\n        this.state.occupied.add(i);\n      }\n\n      this.setState({\n        board: curBoard,\n        board2: JSON.parse(JSON.stringify(curBoard)),\n        queens: val,\n        visted: new Set(),\n        occupied: new Set()\n      });\n      this.forceUpdate();\n    };\n\n    this.state = {\n      board: [],\n      board2: [],\n      solution: [],\n      occupied: new Set(),\n      visited: new Set(),\n      queens: 8,\n      show: false,\n      showselected: false,\n      curSelectSolution: null,\n      loading: \"none\"\n    };\n  }\n\n  componentDidMount() {\n    for (var j = 2; j <= 32; j++) {\n      options.push({\n        label: `${j} queens`,\n        value: j\n      });\n    }\n\n    var curBoard = [];\n\n    for (var i = 0; i < this.state.queens; i++) {\n      curBoard.push(new Array(this.state.queens).fill(0));\n      this.state.occupied.add(i);\n    }\n\n    this.setState({\n      board: curBoard,\n      board2: JSON.parse(JSON.stringify(curBoard))\n    });\n  }\n\n  render() {\n    var cheeses = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"web-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainpart\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          style: {\n            display: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sizeDecide\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"selection\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                position: 'absolute',\n                top: '50%'\n              },\n              onChange: e => {\n                console.log(e);\n                this.Queennumber(e);\n              },\n              label: \"Select Queens\",\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"texts\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Backtracking Search for -queeen problem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            width: '94%',\n            height: '40%',\n            marginTop: '30px',\n            marginLeft: '3%',\n            border: 'solid #33BCC1 2px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '10px',\n              marginLeft: '3%',\n              height: '20px',\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: '15px'\n            },\n            children: \"Specify Any Required location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controller\",\n            children: this.state.board.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cheese\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  backgroundColor: '#33BCC1',\n                  width: '30px',\n                  height: '100%',\n                  color: 'white',\n                  fontSize: '15px',\n                  textAlign: 'center',\n                  borderRadius: '6px',\n                  display: 'inline-block'\n                },\n                children: [\"Q\", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), val.map((val, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"pickrow\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"button\",\n            children: \"Slove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mainboard\",\n          children: this.state.board.map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              xs: 10,\n              style: {\n                height: 100 / this.state.board.length * 0.6 + \"vh\",\n                alignContent: \"center\",\n                justifyContent: \"center\",\n                textAlignVertical: \"center\",\n                textAlign: \"center\",\n                margin: \"0.1vh\"\n              },\n              children: val.map((vall, a) => {\n                const cur = index % 2 === 0 ? colors2 : colors;\n                var img = \"\";\n\n                switch (vall) {\n                  default:\n                    img = \"\";\n                    break;\n\n                  case 1:\n                    // img = ab;\n                    break;\n\n                  case -1:\n                    // img = x;\n                    break;\n                }\n\n                return /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 32 / vall.length,\n                  style: {\n                    alignContent: \"center\",\n                    justifyContent: \"center\",\n                    textAlignVertical: \"center\",\n                    textAlign: \"center\",\n                    backgroundColor: cur[a % 2 + 1],\n                    margin: \"0.1vh\",\n                    height: \"100%\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      backgroundColor: \"transparent\",\n                      outlineColor: \"transparent\",\n                      borderColor: \"transparent\",\n                      marginTop: \"10%\",\n                      backgroundImage: `url(${img})`,\n                      backgroundSize: \"100% 100%\",\n                      height: \"80%\",\n                      width: \"80%\"\n                    },\n                    onClick: e => {\n                      this.addqueen(e, index, a);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 33\n                }, this);\n              })\n            }, \"row\" + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kimjin/Desktop/notes/CISC481/Program2/program2/my-app/src/MainPage/MainPage.js"],"names":["React","Container","Row","Col","Button","Modal","ListGroup","Spinner","Select","options","label","value","colors","colors2","MainPage","Component","constructor","props","Queennumber","e","val","curBoard","i","push","Array","fill","state","occupied","add","setState","board","board2","JSON","parse","stringify","queens","visted","Set","forceUpdate","solution","visited","show","showselected","curSelectSolution","loading","componentDidMount","j","render","cheeses","display","position","top","console","log","backgroundColor","width","height","marginTop","marginLeft","border","color","fontWeight","fontSize","map","index","textAlign","borderRadius","length","alignContent","justifyContent","textAlignVertical","margin","vall","a","cur","img","outlineColor","borderColor","backgroundImage","backgroundSize","addqueen"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n    Modal,\n    ListGroup,\n    Spinner,\n  } from \"react-bootstrap\";\nimport \"./MainPage.css\";\nimport Select from \"react-select\";\n\nvar options = [{ label: \"1 queen\", value: 1 }];\nconst colors = {\n    1: \"gray\",\n    2: \"green\",\n  };\n  \n  const colors2 = {\n    2: \"gray\",\n    1: \"green\",\n  };\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            board: [],\n            board2: [],\n            solution: [],\n            occupied: new Set(),\n            visited: new Set(),\n            queens: 8,\n            show: false,\n            showselected: false,\n            curSelectSolution: null,\n            loading: \"none\",\n          };\n    }\n\n    componentDidMount() {\n        for (var j = 2; j <= 32; j++) {\n          options.push({ label: `${j} queens`, value: j });\n        }\n        var curBoard = [];\n        for (var i = 0; i < this.state.queens; i++) {\n          curBoard.push(new Array(this.state.queens).fill(0));\n          this.state.occupied.add(i);\n        }\n        this.setState({\n          board: curBoard,\n          board2: JSON.parse(JSON.stringify(curBoard)),\n        });\n      }\n\n    Queennumber = (e) => {\n        const val = e.value;\n        var curBoard = [];\n        for (var i = 0; i < val; i++) {\n          curBoard.push(new Array(val).fill(0));\n          this.state.occupied.add(i);\n        }\n        this.setState({\n          board: curBoard,\n          board2: JSON.parse(JSON.stringify(curBoard)),\n          queens: val,\n          visted: new Set(),\n          occupied: new Set(),\n        });\n        this.forceUpdate();\n      };\n\n    render() {\n        var cheeses = []\n        return (\n            <div className='web-container'>\n                <div className='mainpart'>\n                    <Spinner \n                    animation=\"border\" \n                    role=\"status\"\n                    style={{display: 'none'}}>\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                    <div className='sizeDecide'>\n                        <div id='selection'>\n                            <Select\n                                style={{position: 'absolute', top: '50%'}}\n                                onChange={(e) => {\n                                console.log(e);\n                                this.Queennumber(e);\n                                }}\n                                label=\"Select Queens\"\n                                options={options}\n                            />\n                        </div>\n                        <div id='texts'>\n                            <p>Backtracking Search for -queeen problem</p>\n                        </div>\n                    </div>\n                    <div style={{backgroundColor:'rgba(0, 0, 0, 0.7)', width: '94%', height: '40%', marginTop: '30px', marginLeft: '3%', border: 'solid #33BCC1 2px'}}>\n                        <p style={{marginTop: '10px', marginLeft: '3%' ,height: '20px', color: 'white', fontWeight: 'bold', fontSize: '15px'}}>Specify Any Required location</p>\n                        <div className='controller'>\n                            {this.state.board.map((val, index) => (\n                                <div className='cheese'>\n                                    <p style={{backgroundColor: '#33BCC1', width: '30px', height: '100%', color: 'white', fontSize: '15px', textAlign: 'center', borderRadius: '6px', display: 'inline-block'}}>\n                                        Q{index+1}:\n                                    </p>\n                                    {val.map((val, index) => (\n                                        <a className='pickrow'>\n                                            {index+1}\n                                        </a>\n                                    ))}\n                                </div>\n                            ))}\n                        </div>\n                        <Button id='button'>\n                            Slove\n                        </Button>\n                    </div>\n                    <div id='mainboard'>\n                    {this.state.board.map((val, index) => {\n                        return (\n                            <Row\n                            xs={10}\n                            key={\"row\" + index}\n                            style={{\n                                height: (100 / this.state.board.length) * 0.6 + \"vh\",\n                                alignContent: \"center\",\n                                justifyContent: \"center\",\n                                textAlignVertical: \"center\",\n                                textAlign: \"center\",\n                                margin: \"0.1vh\"\n                            }}\n                            >\n                            {val.map((vall, a) => {\n                                const cur = index % 2 === 0 ? colors2 : colors;\n                                var img = \"\";\n                                switch (vall) {\n                                default:\n                                    img = \"\";\n                                    break;\n                                case 1:\n                                    // img = ab;\n                                    break;\n                                case -1:\n                                    // img = x;\n                                    break;\n                                }\n                                return (\n                                <Col\n                                    xs={32 / vall.length}\n                                    style={{\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    textAlignVertical: \"center\",\n                                    textAlign: \"center\",\n                                    backgroundColor: cur[(a % 2) + 1],\n                                    margin: \"0.1vh\",\n                                    height: \"100%\"\n                                    }}\n                                >\n                                    <Button\n                                    style={{\n                                        backgroundColor: \"transparent\",\n                                        outlineColor: \"transparent\",\n                                        borderColor: \"transparent\",\n                                        marginTop: \"10%\",\n                                        backgroundImage: `url(${img})`,\n                                        backgroundSize: \"100% 100%\",\n                                        height: \"80%\",\n                                        width: \"80%\"\n                                    }}\n                                    onClick={(e) => {\n                                        this.addqueen(e, index, a);\n                                    }}\n                                    ></Button>\n                                </Col>\n                                );\n                            })}\n                            </Row>\n                        );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}