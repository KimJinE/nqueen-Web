{"version":3,"sources":["logo.svg","queen.jpg","x.jpg","MainPage/MainPage.jsx","MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["options","label","value","colors","1","2","colors2","MainPage","props","Queennumber","e","val","curBoard","i","push","Array","fill","setState","board","board2","JSON","parse","stringify","queens","solution","presetboard","forceUpdate","isSave","row","col","j","length","setrow","rows","column","mypicking","state","picking","tempreset","splice","solveThePuzzle","mysolution","res","solve","after_filter","preset","console","log","forEach","vall","contains","alert","loading","show","results","paint","resultboards","hassolution","tem","r","c","indexOf","x","clear","newBoard","showselected","curSelectSolution","this","className","Spinner","animation","role","style","display","id","position","top","onChange","backgroundColor","width","height","marginTop","marginLeft","border","color","fontWeight","fontSize","map","index","textAlign","borderRadius","back","Button","transform","onClick","valll","alignContent","justifyContent","textAlignVertical","margin","a","cur","img","queen","outlineColor","borderColor","backgroundImage","backgroundSize","React","Component","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,I,sFCAA,MAA0B,kCCA1B,MAA0B,8BCgBrCA,EAAU,CAAC,CAAEC,MAAO,UAAWC,MAAO,IACpCC,EAAS,CACXC,EAAG,UACHC,EAAG,WAGCC,EAAU,CACdD,EAAG,UACHD,EAAG,WCvBQG,E,kDD2BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAgCVC,YAAc,SAACC,GAGX,IAFA,IAAMC,EAAMD,EAAER,MACVU,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAASE,KAAK,IAAIC,MAAMJ,GAAKK,KAAK,IAEpC,EAAKC,SAAS,CACZC,MAAON,EACPO,OAAQC,KAAKC,MAAMD,KAAKE,UAAUV,IAClCW,OAAQZ,EACRa,SAAU,GACVC,YAAab,IAEf,EAAKc,eA9CU,EAiDnBC,OAAS,SAACT,EAAOU,EAAKC,GACtB,IAAIhB,EAAGiB,EACP,IAAKjB,EAAI,EAAGA,EAAIK,EAAMa,OAAQlB,IAAK,GAAsB,IAAlBK,EAAMU,GAAKf,GAAU,OAAO,EAEnE,IAAKA,EAAIe,EAAKE,EAAID,EAAKhB,GAAK,GAAKiB,GAAK,EAAGjB,IAAKiB,IAC1C,GAAoB,IAAhBZ,EAAML,GAAGiB,GAAU,OAAO,EAElC,IAAKjB,EAAIe,EAAKE,EAAID,EAAKC,GAAK,GAAKjB,EAAIK,EAAMa,OAAQlB,IAAKiB,IACpD,GAAoB,IAAhBZ,EAAML,GAAGiB,GAAU,OAAO,EAClC,IAAKjB,EAAIe,EAAKE,EAAID,EAAKhB,EAAIK,EAAMa,QAAUD,EAAIZ,EAAMa,OAAQlB,IAAKiB,IAC9D,GAAoB,IAAhBZ,EAAML,GAAGiB,GAAU,OAAO,EAClC,IAAKjB,EAAIe,EAAKE,EAAID,EAAKhB,GAAK,GAAKiB,EAAIZ,EAAMa,OAAQlB,IAAKiB,IACpD,GAAoB,IAAhBZ,EAAML,GAAGiB,GAAU,OAAO,EAClC,IAAKjB,EAAIK,EAAMa,OAAQlB,GAAK,EAAGA,IAAK,GAAsB,IAAlBK,EAAMU,GAAKf,GAAU,OAAO,EACpE,OAAO,GA/DY,EAkEnBmB,OAAS,SAACtB,EAAGuB,EAAMC,GAGf,IAFA,IAAIC,EAAY,EAAKC,MAAMC,QACvBC,EAAY,EAAKF,MAAMX,YAClBZ,EAAE,EAAGA,EAAEsB,EAAUJ,OAAQlB,IAC1BsB,EAAUtB,GAAG,KAAOoB,IACpBK,EAAUH,EAAUtB,GAAG,IAAIsB,EAAUtB,GAAG,IAAM,EAC9CsB,EAAUI,OAAO1B,EAAE,IAG3BsB,EAAUrB,KAAK,CAACmB,EAAKC,IACrBI,EAAUL,GAAMC,GAAU,EAC1B,EAAKjB,SAAS,CAACoB,QAASF,EAAWV,YAAaa,IAChD,EAAKZ,eA9EU,EAiFnBc,eAAiB,SAACtB,EAAOW,EAAKY,GAC1B,GAAIZ,IAAQX,EAAMa,OAEhB,OADAU,EAAW3B,KAAKM,KAAKC,MAAMD,KAAKE,UAAUJ,MACnC,EAGT,IADA,IAAIwB,GAAM,EACD7B,EAAI,EAAGA,EAAIK,EAAMa,OAAQlB,IAC5B,EAAKc,OAAOT,EAAOL,EAAGgB,KACxBX,EAAML,GAAGgB,GAAO,EAChBa,EAAM,EAAKF,eAAetB,EAAOW,EAAM,EAAGY,IAAeC,EACzDxB,EAAML,GAAGgB,GAAO,GAGpB,OAAOa,GA9FQ,EAiGnBC,MAAQ,SAACjC,EAAGG,GACR,IAAI4B,EAAa,GACjB,EAAKD,eAAe,EAAKJ,MAAMjB,OAAQ,EAAGsB,GAE1C,IAAMG,EAAe,GACfC,EAAS,EAAKT,MAAMC,QAC1BS,QAAQC,IAAI,EAAKX,MAAMC,SACvBI,EAAWO,SAAQ,SAACC,GAElB,IADA,IAAIC,GAAW,EACNrC,EAAE,EAAGA,EAAEgC,EAAOd,OAAQlB,IACc,IAArCoC,EAAKJ,EAAOhC,GAAG,IAAIgC,EAAOhC,GAAG,MAC7BiC,QAAQC,IAAI,SACZG,GAAW,IAGF,IAAbA,GAAmBN,EAAa9B,KAAKmC,MAEf,IAAxBL,EAAab,QACboB,MAAM,yBAEV,EAAKlC,SAAS,CAAEO,SAAUoB,EAAcQ,QAAS,SACjD,EAAK1B,eAtHU,EAyHnB2B,KAAO,SAAC3C,EAAGG,GAGP,GAAmC,IAA/B,EAAKuB,MAAMZ,SAASO,OAAxB,CAMA,IAFA,IAAIuB,EAAS,GACPpC,EAAQ,EAAKkB,MAAMZ,SAAS,GACzBM,EAAI,EAAGA,EAAIZ,EAAMa,OAAQD,IAC9BwB,EAAQxC,KAAK,EAAKyC,MAAMrC,EAAMY,IAElC,EAAKb,SAAS,CAAEuC,aAAcF,EAASG,aAAa,SARlDN,MAAM,0CA7HO,EAwInBI,MAAQ,SAACrC,EAAOL,GACZ,IAAI6C,EAAM,GACV,EAAKtB,MAAMlB,MAAM8B,SAAQ,SAACrC,GACxB+C,EAAI5C,KAAK,IAAIC,MAAMJ,EAAIoB,QAAQf,KAAK,OAEtC,IAAK,IAAI2C,EAAI,EAAGA,GAAG9C,EAAG8C,IAAK,CAEvB,IADA,IAAIC,EAAI1C,EAAMyC,GAAGE,QAAQ,GAChBC,EAAI,EAAGA,EAAI5C,EAAMa,OAAQ+B,IAC9BJ,EAAIC,GAAGG,GAAK,EACRH,EAAEG,EAAI5C,EAAMa,SACZ2B,EAAIC,EAAEG,GAAGF,IAAM,GAEdD,EAAEG,EAAK5C,EAAMa,QAAW6B,EAAEE,EAAK5C,EAAMa,SACtC2B,EAAIC,EAAEG,GAAGF,EAAEE,IAAM,GAEhBH,EAAEG,EAAK5C,EAAMa,QAAW6B,EAAEE,GAAK,IAChCJ,EAAIC,EAAEG,GAAGF,EAAEE,IAAM,GAGzBJ,EAAIC,GAAGC,GAAK,EAGhB,OAAOF,GA9JQ,EAiKnBK,MAAQ,WACJ,IAAIC,EAAW,GACf,EAAK5B,MAAMlB,MAAM8B,SAAQ,SAACrC,GACxBqD,EAASlD,KAAK,IAAIC,MAAMJ,EAAIoB,QAAQf,KAAK,OAE3C,EAAKC,SAAS,CACZC,MAAO8C,EACP7C,OAAQC,KAAKC,MAAMD,KAAKE,UAAU0C,IAClCvC,YAAauC,EACb3B,QAAS,GACTb,SAAU,GACViC,aAAa,IAEf,EAAK/B,eA5KL,EAAKU,MAAQ,CACTlB,MAAO,GACPC,OAAQ,GACRK,SAAU,GACVD,OAAQ,EACR8B,MAAM,EACNY,cAAc,EACdC,kBAAmB,KACnBd,QAAS,OACTf,QAAQ,GACRZ,YAAY,GACZ+B,aAAc,GACdC,aAAa,GAdF,E,gEAmBf,IAAK,IAAI3B,EAAI,EAAGA,GAAK,GAAIA,IACvB9B,EAAQc,KAAK,CAAEb,MAAM,GAAD,OAAK6B,EAAL,WAAiB5B,MAAO4B,IAG9C,IADA,IAAIlB,EAAW,GACNC,EAAI,EAAGA,EAAIsD,KAAK/B,MAAMb,OAAQV,IACrCD,EAASE,KAAK,IAAIC,MAAMoD,KAAK/B,MAAMb,QAAQP,KAAK,IAElDmD,KAAKlD,SAAS,CACZC,MAAON,EACPO,OAAQC,KAAKC,MAAMD,KAAKE,UAAUV,IAClCa,YAAab,M,+BAoJT,IAAD,OACL,OACI,qBAAKwD,UAAU,gBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,cAACC,EAAA,EAAD,CACAC,UAAU,SACVC,KAAK,SACLC,MAAO,CAACC,QAAS,QAHjB,SAII,sBAAML,UAAU,UAAhB,0BAEJ,sBAAKA,UAAU,aAAf,UACI,qBAAKM,GAAG,YAAR,SACI,cAAC,IAAD,CACIF,MAAO,CAACG,SAAU,WAAYC,IAAK,OACnCC,SAAU,SAACnE,GACXoC,QAAQC,IAAIrC,GACZ,EAAKD,YAAYC,IAEjBT,MAAM,gBACND,QAASA,MAGjB,qBAAK0E,GAAG,QAAR,SACI,8EAGR,sBAAKF,MAAO,CAACM,gBAAgB,qBAAsBC,MAAO,MAAOC,OAAQ,MAAOC,UAAW,OAAQC,WAAY,KAAMC,OAAQ,qBAA7H,UACI,mBAAGX,MAAO,CAACS,UAAW,OAAQC,WAAY,KAAMF,OAAQ,OAAQI,MAAO,QAASC,WAAY,OAAQC,SAAU,QAA9G,2CACA,qBAAKlB,UAAU,aAAf,SACKD,KAAK/B,MAAMX,YAAY8D,KAAI,SAAC5E,EAAK6E,GAAN,OACxB,sBAAKpB,UAAU,SAAf,UACI,oBAAGI,MAAO,CAACM,gBAAiB,UAAWC,MAAO,OAAQC,OAAQ,OAAQI,MAAO,QAASE,SAAU,OAAQG,UAAW,SAAUC,aAAc,MAAOjB,QAAS,gBAA3J,cACMe,EAAM,EADZ,OAGC7E,EAAI4E,KAAI,SAACtC,EAAMpC,GACZ,IAAI8E,EAAO,UACX,OAAO1C,GACP,QACI0C,EAAO,UACP,MACJ,KAAK,EACDA,EAAO,UAEX,OACI,cAACC,EAAA,EAAD,CACAxB,UAAY,UACZI,MAAO,CACHO,MAAO,OACPC,OAAQ,OACRF,gBAAiBa,EACjBlB,QAAS,eACTiB,aAAc,MACdD,UAAW,SACXL,MAAO,QACPF,WAAY,MACZC,OAAQ,OACRU,UAAW,mBAEfC,QAAS,SAACpF,GACN,EAAKsB,OAAOtB,EAAG8E,EAAM3E,IAfzB,SAgBKA,EAAE,eAQ3B,sBAAK6D,GAAG,SAAR,UACI,cAACkB,EAAA,EAAD,CAAQxB,UAAU,UAAU0B,QAAS3B,KAAKxB,MAA1C,mBAGA,cAACiD,EAAA,EAAD,CAAQxB,UAAU,UAAU0B,QAAS3B,KAAKd,KAA1C,kBAGA,cAACuC,EAAA,EAAD,CAAQxB,UAAU,UAAU0B,QAAS3B,KAAKJ,MAA1C,yBAKPI,KAAK/B,MAAMqB,YACR,qBAAKiB,GAAG,aAAR,SACKP,KAAK/B,MAAMoB,aAAa+B,KAAI,SAACQ,GAAD,OACzB,qBAAKrB,GAAG,YAAR,SACCqB,EAAMR,KAAI,SAAC5E,EAAK6E,GACb,OACI,qBAEAhB,MAAO,CACHQ,OAAQ,IAAM,EAAK5C,MAAMlB,MAAMa,OAAS,KACxCiE,aAAc,SACdC,eAAgB,SAChBC,kBAAmB,SACnBT,UAAW,SACXU,OAAQ,SARZ,SAWCxF,EAAI4E,KAAI,SAACtC,EAAMmD,GACZ,IAAMC,EAAMb,EAAQ,IAAM,EAAIlF,EAAUH,EACpCmG,EAAM,GACV,OAAQrD,GACR,QACIqD,EAAM,GACN,MACJ,KAAK,EACDA,EAAMC,EACN,MACJ,KAAM,EACFD,EAAMxC,EAGV,OACA,qBACIU,MAAO,CACPO,MAAO,IAAIpE,EAAIoB,OAAQ,KACvB0C,QAAS,eACTuB,aAAc,SACdC,eAAgB,SAChBC,kBAAmB,SACnBT,UAAW,SACXX,gBAAiBuB,EAAKD,EAAI,EAAK,GAC/BD,OAAQ,QACRnB,OAAQ,QAVZ,SAaI,cAACY,EAAA,EAAD,CACApB,MAAO,CACHM,gBAAiB,cACjB0B,aAAc,cACdC,YAAa,cACbxB,UAAW,MACXyB,gBAAgB,OAAD,OAASJ,EAAT,KACfK,eAAgB,YAChB3B,OAAQ,MACRD,MAAO,eA/Cd,MAAQS,aA4D7B,qBAAKd,GAAG,YAAR,SACCP,KAAK/B,MAAMlB,MAAMqE,KAAI,SAAC5E,EAAK6E,GACxB,OACI,qBAEAhB,MAAO,CACHQ,OAAQ,IAAM,EAAK5C,MAAMlB,MAAMa,OAAS,KACxCiE,aAAc,SACdC,eAAgB,SAChBC,kBAAmB,SACnBT,UAAW,SACXU,OAAQ,SARZ,SAWCxF,EAAI4E,KAAI,SAACtC,EAAMmD,GACZ,IAAMC,EAAMb,EAAQ,IAAM,EAAIlF,EAAUH,EACpCmG,EAAM,GACV,OAAQrD,GACR,QACIqD,EAAM,GACN,MACJ,KAAK,EACDA,EAAMC,EACN,MACJ,KAAM,EACFD,EAAMxC,EAGV,OACA,qBACIU,MAAO,CACPO,MAAO,IAAIpE,EAAIoB,OAAQ,KACvB0C,QAAS,eACTuB,aAAc,SACdC,eAAgB,SAChBC,kBAAmB,SACnBT,UAAW,SACXX,gBAAiBuB,EAAKD,EAAI,EAAK,GAC/BD,OAAQ,QACRnB,OAAQ,QAVZ,SAaI,cAACY,EAAA,EAAD,CACApB,MAAO,CACHM,gBAAiB,cACjB0B,aAAc,cACdC,YAAa,cACbxB,UAAW,MACXyB,gBAAgB,OAAD,OAASJ,EAAT,KACfK,eAAgB,YAChB3B,OAAQ,MACRD,MAAO,eA/Cd,MAAQS,iB,GAzUPoB,IAAMC,WEX7BC,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1G,SCE1B2G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e565d6d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/queen.a809878b.jpg\";","export default __webpack_public_path__ + \"static/media/x.d35aaca5.jpg\";","import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n    Modal,\n    ListGroup,\n    Spinner,\n  } from \"react-bootstrap\";\nimport \"./MainPage.css\";\nimport Select from \"react-select\";\nimport queen from \"../queen.jpg\";\nimport x from \"../x.jpg\";\nimport Carousel from 'react-bootstrap/Carousel';\n\nvar options = [{ label: \"1 queen\", value: 1 }];\nconst colors = {\n    1: \"#23AF23\",\n    2: \"#98C90B\",\n  };\n  \n  const colors2 = {\n    2: \"#23AF23\",\n    1: \"#98C90B\",\n  };\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            board: [],\n            board2: [],\n            solution: [],\n            queens: 8,\n            show: false,\n            showselected: false,\n            curSelectSolution: null,\n            loading: \"none\",\n            picking:[],\n            presetboard:[],\n            resultboards: [],\n            hassolution: false,\n        };\n    }\n\n    componentDidMount() {\n        for (var j = 2; j <= 32; j++) {\n          options.push({ label: `${j} queens`, value: j });\n        }\n        var curBoard = [];\n        for (var i = 0; i < this.state.queens; i++) {\n          curBoard.push(new Array(this.state.queens).fill(0));\n        }\n        this.setState({\n          board: curBoard,\n          board2: JSON.parse(JSON.stringify(curBoard)),\n          presetboard: curBoard,\n        });\n      }\n\n    Queennumber = (e) => {\n        const val = e.value;\n        var curBoard = [];\n        for (var i = 0; i < val; i++) {\n          curBoard.push(new Array(val).fill(0));\n        }\n        this.setState({\n          board: curBoard,\n          board2: JSON.parse(JSON.stringify(curBoard)),\n          queens: val,\n          solution: [],\n          presetboard: curBoard,\n        });\n        this.forceUpdate();\n    };\n\n    isSave = (board, row, col) => {\n    var i, j;\n    for (i = 0; i < board.length; i++) if (board[row][i] === 1) return false;\n\n    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)\n        if (board[i][j] === 1) return false;\n\n    for (i = row, j = col; j >= 0 && i < board.length; i++, j--)\n        if (board[i][j] === 1) return false;\n    for (i = row, j = col; i < board.length && j < board.length; i++, j++)\n        if (board[i][j] === 1) return false;\n    for (i = row, j = col; i >= 0 && j < board.length; i--, j++)\n        if (board[i][j] === 1) return false;\n    for (i = board.length; i >= 0; i--) if (board[row][i] === 1) return false;\n    return true;\n    };\n\n    setrow = (e, rows, column) => {\n        var mypicking = this.state.picking;\n        var tempreset = this.state.presetboard;\n        for (var i=0; i<mypicking.length; i++){\n            if (mypicking[i][0] === rows) {\n                tempreset[mypicking[i][0]][mypicking[i][1]] = 0;\n                mypicking.splice(i,1);\n            }\n        }\n        mypicking.push([rows,column]);\n        tempreset[rows][column] = 1\n        this.setState({picking: mypicking, presetboard: tempreset});\n        this.forceUpdate();\n    }\n\n    solveThePuzzle = (board, col, mysolution) => {\n        if (col === board.length) {\n          mysolution.push(JSON.parse(JSON.stringify(board)));\n          return true;\n        }\n        var res = false;\n        for (var i = 0; i < board.length; i++) {\n          if (this.isSave(board, i, col)) {\n            board[i][col] = 1;\n            res = this.solveThePuzzle(board, col + 1, mysolution) || res;\n            board[i][col] = 0;\n          }\n        }\n        return res;\n    };\n\n    solve = (e, i) => {\n        var mysolution = [];\n        this.solveThePuzzle(this.state.board2, 0, mysolution);\n\n        const after_filter = [];\n        const preset = this.state.picking;\n        console.log(this.state.picking);\n        mysolution.forEach((vall) => {\n          var contains = true;\n          for (var i=0; i<preset.length; i++) {\n              if (vall[preset[i][0]][preset[i][1]] === 0) {\n                  console.log(\"reach\");\n                  contains = false;\n              }\n          }\n          if (contains === true) after_filter.push(vall);\n        });\n        if (after_filter.length === 0) {\n            alert(\"there is no solutions\")\n        }\n        this.setState({ solution: after_filter, loading: \"none\"});\n        this.forceUpdate();\n    };\n\n    show = (e, i) => {\n        // console.log(this.state.solution.length);\n\n        if (this.state.solution.length === 0) {\n          alert(\"there is solution for this puzzle yet\");\n          return;\n        }\n        var results =[];\n        const board = this.state.solution[0];\n        for (var j = 0; j < board.length; j++) {\n            results.push(this.paint(board,j));\n        }\n        this.setState({ resultboards: results, hassolution: true });\n    };\n\n    paint = (board, i) => {\n        var tem = [];\n        this.state.board.forEach((val) => {\n          tem.push(new Array(val.length).fill(0));\n        });\n        for (var r = 0; r<=i; r++) {\n            var c = board[r].indexOf(1);\n            for (var x = 0; x < board.length; x++) {\n                tem[r][x] = 0;\n                if (r+x < board.length) {\n                    tem[r+x][c] = -1;\n                }\n                if ((r+x) < board.length && (c+x) < board.length) {\n                    tem[r+x][c+x] = -1;\n                }\n                if ((r+x) < board.length && (c-x) >=0) {\n                    tem[r+x][c-x] = -1;\n                }\n            }\n            tem[r][c] = 1;\n        }\n        \n        return tem;\n    }\n\n    clear = () => {\n        var newBoard = [];\n        this.state.board.forEach((val) => {\n          newBoard.push(new Array(val.length).fill(0));\n        });\n        this.setState({\n          board: newBoard,\n          board2: JSON.parse(JSON.stringify(newBoard)),\n          presetboard: newBoard,\n          picking: [],\n          solution: [],\n          hassolution: false,\n        });\n        this.forceUpdate();\n      };\n\n    render() {\n        return (\n            <div className='web-container'>\n                <div className='mainpart'>\n                    <Spinner \n                    animation=\"border\" \n                    role=\"status\"\n                    style={{display: 'none'}}>\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                    <div className='sizeDecide'>\n                        <div id='selection'>\n                            <Select\n                                style={{position: 'absolute', top: '50%'}}\n                                onChange={(e) => {\n                                console.log(e);\n                                this.Queennumber(e);\n                                }}\n                                label=\"Select Queens\"\n                                options={options}\n                            />\n                        </div>\n                        <div id='texts'>\n                            <p>Backtracking Search for n-queeen problem</p>\n                        </div>\n                    </div>\n                    <div style={{backgroundColor:'rgba(0, 0, 0, 0.7)', width: '94%', height: '40%', marginTop: '30px', marginLeft: '3%', border: 'solid #33BCC1 2px'}}>\n                        <p style={{marginTop: '10px', marginLeft: '3%' ,height: '20px', color: 'white', fontWeight: 'bold', fontSize: '15px'}}>Specify Any Required location</p>\n                        <div className='controller'>\n                            {this.state.presetboard.map((val, index) => (\n                                <div className='cheese'>\n                                    <p style={{backgroundColor: '#33BCC1', width: '30px', height: '100%', color: 'white', fontSize: '15px', textAlign: 'center', borderRadius: '6px', display: 'inline-block'}}>\n                                        Q{index+1}:\n                                    </p>\n                                    {val.map((vall, i) => {\n                                        var back = '#9C9E9E';\n                                        switch(vall) {\n                                        default:\n                                            back = '#9C9E9E';\n                                            break;\n                                        case 1:\n                                            back = '#454848';\n                                        }\n                                        return (\n                                            <Button\n                                            className = 'pickrow'\n                                            style={{\n                                                width: \"30px\",\n                                                height: \"100%\",\n                                                backgroundColor: back,\n                                                display: 'inline-block',\n                                                borderRadius: '6px',\n                                                textAlign: 'center',\n                                                color: 'white',\n                                                marginLeft: '1px',\n                                                border: 'none',\n                                                transform: 'translateY(10%)',\n                                            }}\n                                            onClick={(e) => {\n                                                this.setrow(e, index,i)}}>\n                                                {i+1}\n                                            </Button>\n                                        )\n                                        }\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                        <div id='button'>\n                            <Button className='buttons' onClick={this.solve}>\n                                Slove\n                            </Button>\n                            <Button className='buttons' onClick={this.show}>\n                                show\n                            </Button>\n                            <Button className='buttons' onClick={this.clear}>\n                                clear\n                            </Button>\n                        </div>\n                    </div>\n                    {this.state.hassolution ? \n                        <div id='mainboard2'>\n                            {this.state.resultboards.map((valll) => (\n                                <div id='mainboard'>\n                                {valll.map((val, index) => {\n                                    return (\n                                        <div\n                                        key={\"row\" + index}\n                                        style={{\n                                            height: 640 / this.state.board.length + \"px\",\n                                            alignContent: \"center\",\n                                            justifyContent: \"center\",\n                                            textAlignVertical: \"center\",\n                                            textAlign: \"center\",\n                                            margin: \"0.1vh\"\n                                        }}\n                                        >\n                                        {val.map((vall, a) => {\n                                            const cur = index % 2 === 0 ? colors2 : colors;\n                                            var img = \"\";\n                                            switch (vall) {\n                                            default:\n                                                img = \"\";\n                                                break;\n                                            case 1:\n                                                img = queen;\n                                                break;\n                                            case -1:\n                                                img = x;\n                                                break;\n                                            }\n                                            return (\n                                            <div\n                                                style={{\n                                                width: 640/val.length +'px',\n                                                display: \"inline-block\",\n                                                alignContent: \"center\",\n                                                justifyContent: \"center\",\n                                                textAlignVertical: \"center\",\n                                                textAlign: \"center\",\n                                                backgroundColor: cur[(a % 2) + 1],\n                                                margin: \"0.1vh\",\n                                                height: \"100%\"\n                                                }}\n                                            >\n                                                <Button\n                                                style={{\n                                                    backgroundColor: \"transparent\",\n                                                    outlineColor: \"transparent\",\n                                                    borderColor: \"transparent\",\n                                                    marginTop: \"10%\",\n                                                    backgroundImage: `url(${img})`,\n                                                    backgroundSize: \"100% 100%\",\n                                                    height: \"80%\",\n                                                    width: \"80%\"\n                                                }}\n                                                ></Button>\n                                            </div>\n                                            );\n                                        })}\n                                        </div>\n                                    );\n                                    })}\n                                </div>\n                            ))}\n                        </div>\n                    :\n                        <div id='mainboard'>\n                        {this.state.board.map((val, index) => {\n                            return (\n                                <div\n                                key={\"row\" + index}\n                                style={{\n                                    height: 640 / this.state.board.length + \"px\",\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    textAlignVertical: \"center\",\n                                    textAlign: \"center\",\n                                    margin: \"0.1vh\"\n                                }}\n                                >\n                                {val.map((vall, a) => {\n                                    const cur = index % 2 === 0 ? colors2 : colors;\n                                    var img = \"\";\n                                    switch (vall) {\n                                    default:\n                                        img = \"\";\n                                        break;\n                                    case 1:\n                                        img = queen;\n                                        break;\n                                    case -1:\n                                        img = x;\n                                        break;\n                                    }\n                                    return (\n                                    <div\n                                        style={{\n                                        width: 640/val.length +'px',\n                                        display: \"inline-block\",\n                                        alignContent: \"center\",\n                                        justifyContent: \"center\",\n                                        textAlignVertical: \"center\",\n                                        textAlign: \"center\",\n                                        backgroundColor: cur[(a % 2) + 1],\n                                        margin: \"0.1vh\",\n                                        height: \"100%\"\n                                        }}\n                                    >\n                                        <Button\n                                        style={{\n                                            backgroundColor: \"transparent\",\n                                            outlineColor: \"transparent\",\n                                            borderColor: \"transparent\",\n                                            marginTop: \"10%\",\n                                            backgroundImage: `url(${img})`,\n                                            backgroundSize: \"100% 100%\",\n                                            height: \"80%\",\n                                            width: \"80%\"\n                                        }}\n                                        ></Button>\n                                    </div>\n                                    );\n                                })}\n                                </div>\n                            );\n                            })}\n                        </div>}\n                </div>\n            </div>\n        );\n    }\n}","import MainPage from './MainPage.jsx';\nexport default MainPage;","import logo from './logo.svg';\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport './App.css';\n\nimport MainPage from './MainPage/MainPage'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}